{"name":"Smart-snippets","tagline":"Smart Snippets for Sublime Text","body":"## Smart Snippets for Sublime Text 2/3\r\n\r\n### Installation on Sublime Text 2 and Sublime Text 3\r\n\r\n#### Mac/Linux Instructions\r\n\r\n1. CD into Sublime Text packages folder\r\n\r\n    `cd ~/Library/Application\\ Support/Sublime\\ Text\\ 2/Packages`\r\n\r\n  or\r\n\r\n    `cd ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages`\r\n\r\n2. Clone repository into packages folder\r\n\r\n`git clone https://github.com/maxlee/Smart-Snippets.git`\r\n\r\n#### Windows Instructions\r\n\r\n`cd \"%AppData%\\Sublime Text 3\\Packages\\User\"`\r\n`git clone https://github.com/maxlee/Smart-Snippets.git`\r\n\r\n\r\n### Installation on Package Control\r\n\r\n#### <a href=\"https://sublime.wbond.net/installation\">How to install Package Control</a>\r\nGet Package Control for Sublime Text 2/3. Installation is through the Sublime Text 2/3 console. The console is accessed via the ctrl+` shortcut or the View > Show Console menu. Once open, paste the appropriate Python code for your version of Sublime Text into the console.\r\n\r\n##### SUBLIME TEXT 2\r\n```\r\nimport urllib2,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')\r\n```\r\n##### SUBLIME TEXT 3\r\n```\r\nimport urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\r\n```\r\n\r\n1. Package Control: Add Repository `https://github.com/maxlee/Smart-Snippets`\r\n2. Package Control: Install Package `Smart Snippets`\r\n3. Restart ST2/3 editor\r\n\r\n### “Help! My snippets doesn’t work anymore in HTML/CSS files!”\r\n\r\nBy default, Emmet overrides Tab key behaviour and expands its own abbreviations instead native snippets. You can either disable this feature in user preferences (add `\"disable_tab_abbreviations\": true` setting into your _Settings — User_ file) and use `Ctrl+E` or `Ctrl+Alt+Enter` to expand Emmet abbeviations or move your snippets to Emmet as described [here](https://github.com/sergeche/emmet-sublime/issues/16#issuecomment-8427268). I’m investigating possibility to expand native snippets via Emmet Tab key handler.\r\n\r\n### Thank you for installing Smart Snippets. Enjoy coding!\r\n![DemoCSSVideo](https://raw.githubusercontent.com/maxlee/Smart-Snippets/gh-pages/img/css.gif)\r\n![DemoHTMLVideo](https://raw.githubusercontent.com/maxlee/Smart-Snippets/gh-pages/img/html.gif)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}